apply plugin: 'com.android.application'

android {
    compileSdkVersion 26
    buildToolsVersion "26.0.1"
    defaultConfig {
        applicationId "com.nbk"
        minSdkVersion 19
        targetSdkVersion 26
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
        externalNativeBuild {
            cmake {
                cppFlags "-frtti -fexceptions"
            }
        }
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    externalNativeBuild {
        cmake {
            path "CMakeLists.txt"
        }
    }

    sourceSets {
        main {
            jniLibs.srcDirs = ['libs']
        }
    }

}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation 'com.android.support:appcompat-v7:26.0.1'
    implementation 'com.android.support.constraint:constraint-layout:1.0.2'
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'com.android.support.test:runner:1.0.0'
    androidTestImplementation 'com.android.support.test.espresso:espresso-core:3.0.0'
}
//def SDK_NAME = "JniUtil";
//def SDK_VERSION = "_V1.0";
//def sdkDestinationPath = "build";
////def zipFile = file('build/intermediates/bundles/release/classes.jar')
//def zipFile = file('com.nbk.JniUtil')
//task deleteBuild(type: Delete) {
//    delete sdkDestinationPath + SDK_NAME + SDK_VERSION + ".jar"
//}
//
//task makeJar(type: Jar) {
//    from zipTree(zipFile)
//    from fileTree(dir: 'src/main',includes: ['assets/**'])
//    baseName = SDK_NAME + SDK_VERSION
//    destinationDir = file(sdkDestinationPath)
//}
//
//makeJar.dependsOn(deleteBuild, build)